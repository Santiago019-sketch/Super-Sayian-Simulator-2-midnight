-- Check if we're in the correct game
local GAME_ID = 16784977282

if game.PlaceId ~= GAME_ID then
    return
end

-- Wait for game to load
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Protected loading of Orion Library
local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()
if not OrionLib then
    warn("Failed to load Orion Library")
    return
end

-- Constants
local NOTIFICATION_DURATION = 5
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- Create window
local Window = OrionLib:MakeWindow({
    Name = "Midnight Hub - Super Saiyan Simulator 2",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "MidnightHubConfig"
})

-- Welcome notification
OrionLib:MakeNotification({
    Name = "Welcome to Midnight Hub!",
    Content = "Enjoy your automated experience.",
    Image = "rbxassetid://4483345998",
    Time = NOTIFICATION_DURATION
})

-- Initialize toggle states
local AutoStates = {
    AutoPunch = false,
    AutoEnergyBall = false,
    AutoRebirth = false,
    AutoPrestige = false,
    AutoTechnique = false,
    AutoDrops = false
}

-- Auto Functions
local function autoPunch()
    while AutoStates.AutoPunch do
        RunService.Heartbeat:Wait()
        local args = {
            [1] = {
                Began = true,
                CFrame = CFrame.new(1762.42431640625, 580.1317138671875, 1351.1337890625),
                Aim = Vector3.new(1762.42431640625, 580.1317138671875, 1301.1337890625),
                Camera = CFrame.new(1762.42431640625, 584.9469604492188, 1363.2078857421875) * CFrame.Angles(-0.261798232793808, 0, 0),
                Type = 1,
                SkillId = "1"
            }
        }
        ReplicatedStorage.Remotes.SkillRemote:FireServer(unpack(args))
    end
end

local function autoEnergyBall()
    while AutoStates.AutoEnergyBall do
        RunService.Heartbeat:Wait()
        local args = {
            [1] = {
                Began = true,
                CFrame = CFrame.new(7110.30518, 731.7995, -10097.873, 0.694442809, -0.578470588, 0.427926362, -1.5264499e-08, 0.594715595, 0.803936183, -0.719547927, -0.55828768, 0.412995934),
                Aim = Vector3.new(1478.2548828125, 589.2730712890625, -2828.173828125),
                Camera = CFrame.new(7127.94629, 767.564453, -10080.8477, 0.694443047, -0.578470528, 0.427926153, -1.49011612e-08, 0.594715476, 0.803936243, -0.719547749, -0.558287919, 0.412995994),
                Type = 1,
                SkillId = "101"
            }
        }
        ReplicatedStorage.Remotes.SkillRemote:FireServer(unpack(args))
    end
end

local function autoRebirth()
    while AutoStates.AutoRebirth do
        RunService.Heartbeat:Wait()
        local statsService = ReplicatedStorage.Packages._Index["sleitnick_knit@1.4.7"].knit.Services.StatsService
        statsService.RE.RebirthUp:FireServer()
    end
end

local function autoDrops()
    local CHEST_TYPES = {
        "Chest_Common",
        "Chest_Epic",
        "Chest_Legendary",
        "Chest_Mythic",
        "Chest_Raid",
        "Chest_Rare",
        "Chest_Uncommon",
        "Chest_Vanity"
    }

    while AutoStates.AutoDrops do
        RunService.Heartbeat:Wait()
        local partStorage = Workspace:FindFirstChild("PartStorage")
        
        if partStorage then
            for _, chestName in ipairs(CHEST_TYPES) do
                local chest = partStorage:FindFirstChild(chestName)
                if chest and chest:FindFirstChild("Base") then
                    local prompt = chest.Base:FindFirstChild("ProximityPrompt")
                    if prompt then
                        fireproximityprompt(prompt, math.huge)
                    end
                end
            end
        end
    end
end

-- Create Tabs
local AutomationTab = Window:MakeTab({
    Name = "Automation",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add Toggles
local function createToggle(name, callback)
    AutomationTab:AddToggle({
        Name = "Auto " .. name,
        Default = false,
        Callback = function(Value)
            AutoStates["Auto" .. name] = Value
            if Value then
                task.spawn(callback)
            end
        end
    })
end

createToggle("Punch", autoPunch)
createToggle("Energy Ball", autoEnergyBall)
createToggle("Rebirth", autoRebirth)
createToggle("Drops", autoDrops)

-- Credits Tab
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

CreditsTab:AddParagraph("Credits", "Scripted by Riotscripter (Modified to Midnight Hub).")

-- Initialize the UI
OrionLib:Init()
